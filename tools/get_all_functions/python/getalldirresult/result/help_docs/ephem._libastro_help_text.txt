Help on module ephem._libastro in ephem:

NAME
    ephem._libastro - Astronomical calculations for Python

CLASSES
    builtins.object
        _libastro.Observer
    
    class Observer(builtins.object)
     |  Describes an observer standing on the Earth's surface.
     |  This object can also store the time at which the observer is watching;
     |  the epoch in which they want astrometric coordinates returned; and the
     |  temperature and barometric pressure, which affect horizon refraction.
     |  See Body.compute() for how to use instances of this class.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  radec_of(...)
     |      compute the right ascension and declination of a point identified by its azimuth and altitude
     |  
     |  sidereal_time(...)
     |      compute the local sidereal time for this location and time
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  date
     |      Date
     |  
     |  elevation
     |      Elevation above sea level in meters
     |  
     |  epoch
     |      Precession epoch
     |  
     |  horizon
     |      The angle above (+) or below (-) the horizon at which an object should be considered at the moment of rising or setting as a float giving radians, or a string giving degrees:minutes:seconds
     |  
     |  lat
     |      Latitude north of the Equator as a float giving radians, or a string giving degrees:minutes:seconds
     |  
     |  lon
     |      Longitude east of Greenwich as a float giving radians, or a string giving degrees:minutes:seconds
     |  
     |  long
     |      Longitude east of Greenwich as a float giving radians, or a string giving degrees:minutes:seconds
     |  
     |  pressure
     |      atmospheric pressure in millibar
     |  
     |  temp
     |      atmospheric temperature in degrees Celsius

FUNCTIONS
    builtin_planets(...)
        return the list of built-in planet objects
    
    constellation(...)
        Return the constellation in which the object or coordinates lie
    
    degrees(...)
        build an angle measured in degrees
    
    delta_t(...)
        Compute the difference between Terrestrial Time and Coordinated Universal Time.
    
    ecl_eq(...)
        compute the ecliptic longitude and latitude of an RA and dec
    
    eq_ecl(...)
        compute the ecliptic longitude and latitude of an RA and dec
    
    eq_gal(...)
        compute the ecliptic longitude and latitude of an RA and dec
    
    gal_eq(...)
        compute the ecliptic longitude and latitude of an RA and dec
    
    hours(...)
        build an angle measured in hours of arc
    
    julian_date(...)
        Return the Julian date of the current time, or of an argument that can be converted into an ephem.Date.
    
    millennium_atlas(...)
        given right ascension and declination (in radians), return the page of the Millenium Star Atlas displaying that location
    
    moon_phases(...)
        compute the new and full moons nearest a given date
    
    now(...)
        Return the current time
    
    precess(...)
        precess a right ascension and declination to another equinox
    
    readdb(...)
        Read an ephem database entry
    
    readtle(...)
        Read TLE-format satellite elements
    
    separation(...)
        Return the angular separation between two objects or positions as a float giving radians, or a string giving degrees:minutes:seconds
    
    uranometria(...)
        given right ascension and declination (in radians), return the page of the original Uranometria displaying that location
    
    uranometria2000(...)
        given right ascension and declination (in radians), return the page of the Uranometria 2000.0 displaying that location

DATA
    J2000 = 36525.0
    MJD0 = 2415020.0
    earth_radius = 6378160.0
    meters_per_au = 149597870000.0
    moon_radius = 1740000.0
    sun_radius = 695000000.0

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/ephem/_libastro.cpython-36m-darwin.so


