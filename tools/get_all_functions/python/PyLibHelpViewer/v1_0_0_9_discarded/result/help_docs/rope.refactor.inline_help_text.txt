Help on module rope.refactor.inline in rope.refactor:

NAME
    rope.refactor.inline

DESCRIPTION
    # Known Bugs when inlining a function/method
    # The values passed to function are inlined using _inlined_variable.
    # This may cause two problems, illustrated in the examples below
    #
    # def foo(var1):
    #    var1 = var1*10
    #    return var1
    #
    #  If a call to foo(20) is inlined, the result of inlined function is 20,
    #  but it should be 200.
    #
    # def foo(var1):
    #    var2 = var1*10
    #    return var2
    #
    # 2- If a call to foo(10+10) is inlined the result of inlined function is 110
    #  but it should be 200.

CLASSES
    _Inliner(builtins.object)
        InlineMethod
        InlineParameter
        InlineVariable
    
    class InlineMethod(_Inliner)
     |  Method resolution order:
     |      InlineMethod
     |      _Inliner
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, *args, **kwds)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  get_changes(self, remove=True, only_current=False, resources=None, task_handle=<rope.base.taskhandle.NullTaskHandle object at 0x107d06470>)
     |      Get the changes this refactoring makes
     |      
     |      If `remove` is `False` the definition will not be removed.  If
     |      `only_current` is `True`, the the current occurrence will be
     |      inlined, only.
     |  
     |  get_kind(self)
     |      Return either 'variable', 'method' or 'parameter'
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _Inliner:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class InlineParameter(_Inliner)
     |  Method resolution order:
     |      InlineParameter
     |      _Inliner
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, *args, **kwds)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  get_changes(self, **kwds)
     |      Get the changes needed by this refactoring
     |      
     |      See `rope.refactor.change_signature.ChangeSignature.get_changes()`
     |      for arguments.
     |  
     |  get_kind(self)
     |      Return either 'variable', 'method' or 'parameter'
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _Inliner:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class InlineVariable(_Inliner)
     |  Method resolution order:
     |      InlineVariable
     |      _Inliner
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, *args, **kwds)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  get_changes(self, remove=True, only_current=False, resources=None, docs=False, task_handle=<rope.base.taskhandle.NullTaskHandle object at 0x107d064a8>)
     |  
     |  get_kind(self)
     |      Return either 'variable', 'method' or 'parameter'
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from _Inliner:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    create_inline(project, resource, offset)
        Create a refactoring object for inlining
        
        Based on `resource` and `offset` it returns an instance of
        `InlineMethod`, `InlineVariable` or `InlineParameter`.
    
    unique_prefix()

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/rope/refactor/inline.py


