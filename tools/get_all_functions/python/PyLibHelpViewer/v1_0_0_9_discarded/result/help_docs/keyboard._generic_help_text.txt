Help on module keyboard._generic in keyboard:

NAME
    keyboard._generic - # -*- coding: utf-8 -*-

CLASSES
    builtins.object
        GenericListener
    
    class GenericListener(builtins.object)
     |  Methods defined here:
     |  
     |  __init__(self)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  add_handler(self, handler)
     |      Adds a function to receive each event captured, starting the capturing
     |      process if necessary.
     |  
     |  invoke_handlers(self, event)
     |  
     |  pre_process_event(self, event)
     |  
     |  process(self)
     |      Loops over the underlying queue of events and processes them in order.
     |  
     |  remove_handler(self, handler)
     |      Removes a previously added event handler.
     |  
     |  start_if_necessary(self)
     |      Starts the listening thread if it wans't already.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  lock = <unlocked _thread.lock object>

FUNCTIONS
    Lock = allocate_lock(...)
        allocate_lock() -> lock object
        (allocate() is an obsolete synonym)
        
        Create a new lock object. See help(type(threading.Lock())) for
        information about locks.

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/keyboard/_generic.py


