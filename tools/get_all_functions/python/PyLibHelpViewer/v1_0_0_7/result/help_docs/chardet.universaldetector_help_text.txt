Help on module chardet.universaldetector in chardet:

NAME
    chardet.universaldetector

DESCRIPTION
    Module containing the UniversalDetector detector class, which is the primary
    class a user of ``chardet`` should use.
    
    :author: Mark Pilgrim (initial port to Python)
    :author: Shy Shalom (original C code)
    :author: Dan Blanchard (major refactoring for 3.0)
    :author: Ian Cordasco

CLASSES
    builtins.object
        UniversalDetector
    
    class UniversalDetector(builtins.object)
     |  The ``UniversalDetector`` class underlies the ``chardet.detect`` function
     |  and coordinates all of the different charset probers.
     |  
     |  To get a ``dict`` containing an encoding and its confidence, you can simply
     |  run:
     |  
     |  .. code::
     |  
     |          u = UniversalDetector()
     |          u.feed(some_bytes)
     |          u.close()
     |          detected = u.result
     |  
     |  Methods defined here:
     |  
     |  __init__(self, lang_filter=31)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  close(self)
     |      Stop analyzing the current document and come up with a final
     |      prediction.
     |      
     |      :returns:  The ``result`` attribute, a ``dict`` with the keys
     |                 `encoding`, `confidence`, and `language`.
     |  
     |  feed(self, byte_str)
     |      Takes a chunk of a document and feeds it through all of the relevant
     |      charset probers.
     |      
     |      After calling ``feed``, you can check the value of the ``done``
     |      attribute to see if you need to continue feeding the
     |      ``UniversalDetector`` more data, or if it has made a prediction
     |      (in the ``result`` attribute).
     |      
     |      .. note::
     |         You should always call ``close`` when you're done feeding in your
     |         document if ``done`` is not already ``True``.
     |  
     |  reset(self)
     |      Reset the UniversalDetector and all of its probers back to their
     |      initial states.  This is called by ``__init__``, so you only need to
     |      call this directly in between analyses of different documents.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  ESC_DETECTOR = re.compile(b'(\x1b|~{)')
     |  
     |  HIGH_BYTE_DETECTOR = re.compile(b'[\x80-\xff]')
     |  
     |  ISO_WIN_MAP = {'iso-8859-1': 'Windows-1252', 'iso-8859-13': 'Windows-1...
     |  
     |  MINIMUM_THRESHOLD = 0.2
     |  
     |  WIN_BYTE_DETECTOR = re.compile(b'[\x80-\x9f]')

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/chardet/universaldetector.py


