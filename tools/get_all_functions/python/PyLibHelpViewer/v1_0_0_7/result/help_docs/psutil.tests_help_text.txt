Help on package psutil.tests in psutil:

NAME
    psutil.tests - Test utilities.

PACKAGE CONTENTS
    __main__
    test_aix
    test_bsd
    test_connections
    test_contracts
    test_linux
    test_memory_leaks
    test_misc
    test_osx
    test_posix
    test_process
    test_sunos
    test_system
    test_unicode
    test_windows

FUNCTIONS
    bind_socket(family=<AddressFamily.AF_INET: 2>, type=<SocketKind.SOCK_STREAM: 1>, addr=None)
        Binds a generic socket.
    
    bind_unix_socket(name, type=<SocketKind.SOCK_STREAM: 1>)
        Bind a UNIX socket.
    
    call_until(fun, expr)
        Keep calling function for timeout secs and exit if eval()
        expression is True.
    
    chdir(dirname)
        Context manager which temporarily changes the current directory.
    
    check_connection_ntuple(conn)
        Check validity of a connection namedtuple.
    
    check_net_address(addr, family)
        Check a net address validity. Supported families are IPv4,
        IPv6 and MAC addresses.
    
    copyload_shared_lib(dst_prefix='$testfn')
        Ctx manager which picks up a random shared CO lib used
        by this process, copies it in another location and loads it
        in memory via ctypes. Return the new absolutized path.
    
    create_exe(outpath, c_code=None)
        Creates an executable file in the given location.
    
    create_proc_children_pair()
        Create a subprocess which creates another one as in:
        A (us) -> B (child) -> C (grandchild).
        Return a (child, grandchild) tuple.
        The 2 processes are fully initialized and will live for 60 secs
        and are registered for cleanup on reap_children().
    
    create_sockets()
        Open as many socket families / types as possible.
    
    create_zombie_proc()
        Create a zombie process and return its PID.
    
    get_free_port(host='127.0.0.1')
        Return an unused TCP port.
    
    get_kernel_version()
        Return a tuple such as (2, 6, 36).
    
    get_suite()
    
    get_test_subprocess(cmd=None, **kwds)
        Creates a python subprocess which does nothing for 60 secs and
        return it as subprocess.Popen instance.
        If "cmd" is specified that is used instead of python.
        By default stdin and stdout are redirected to /dev/null.
        It also attemps to make sure the process is in a reasonably
        initialized state.
        The process is registered for cleanup on reap_children().
    
    get_winver()
    
    import_module_by_path(path)
    
    is_namedtuple(x)
        Check if object is an instance of namedtuple.
    
    pyrun(src, **kwds)
        Run python 'src' code string in a separate interpreter.
        Returns a subprocess.Popen instance.
    
    reap_children(recursive=False)
        Terminate and wait() any subprocess started by this test suite
        and ensure that no zombies stick around to hog resources and
        create problems  when looking for refleaks.
        
        If resursive is True it also tries to terminate and wait()
        all grandchildren started by this process.
    
    reload_module(module)
        Backport of importlib.reload of Python 3.3+.
    
    retry_before_failing(retries=10)
        Decorator which runs a test function and retries N times before
        actually failing.
    
    run_suite()
    
    run_test_module_by_name(name)
    
    safe_rmpath(path)
        Convenience function for removing temporary test files or dirs
    
    skip_on_access_denied(only_if=None)
        Decorator to Ignore AccessDenied exceptions.
    
    skip_on_not_implemented(only_if=None)
        Decorator to Ignore NotImplementedError exceptions.
    
    tcp_socketpair(family, addr=('', 0))
        Build a pair of TCP sockets connected to each other.
        Return a (server, client) tuple.
    
    unique_filename(prefix='$testfn', suffix='')
    
    unix_socket_path(suffix='')
        A context manager which returns a non-existent file name
        and tries to delete it on exit.
    
    unix_socketpair(name)
        Build a pair of UNIX sockets connected to each other through
        the same UNIX file name.
        Return a (server, client) tuple.
    
    wait_for_file(fname, delete=True, empty=False)
        Wait for a file to be written on disk with some content.
    
    wait_for_pid(pid)
        Wait for pid to show up in the process list then return.
        Used in the test suite to give time the sub process to initialize.
    
    warn(msg)
        Raise a warning msg.

DATA
    APPVEYOR = False
    DEVNULL = <_io.TextIOWrapper name='/dev/null' mode='r+' encoding='UTF-...
    GLOBAL_TIMEOUT = 0.5
    HAS_BATTERY = True
    HAS_CPU_AFFINITY = False
    HAS_CPU_FREQ = True
    HAS_ENVIRON = True
    HAS_IONICE = False
    HAS_MEMORY_FULL_INFO = True
    HAS_MEMORY_MAPS = True
    HAS_PROC_CPU_NUM = False
    HAS_PROC_IO_COUNTERS = False
    HAS_RLIMIT = False
    HAS_SENSORS_BATTERY = True
    HAS_SENSORS_FANS = False
    HAS_SENSORS_TEMPERATURES = False
    MEMORY_TOLERANCE = 512000
    NO_RETRIES = 10
    PYPY = False
    PYTHON_EXE = '/Users/jack/miniconda2/envs/py37/bin/python'
    ROOT_DIR = '/Users/jack/miniconda2/envs/py37/lib/python3.6/site-packag...
    SCRIPTS_DIR = '/Users/jack/miniconda2/envs/py37/lib/python3.6/site-pac...
    TESTFILE_PREFIX = '$testfn'
    TESTFN = '/Users/jack/Documents/GitHub/local/tools/get_all_functions/p...
    TESTFN_UNICODE = '/Users/jack/Documents/GitHub/local/tools/get_all_fun...
    TOX = False
    TRAVIS = False
    VALID_PROC_STATUSES = ['dead', 'disk-sleep', 'idle', 'locked', 'runnin...
    VERBOSITY = 2
    __all__ = ['APPVEYOR', 'DEVNULL', 'GLOBAL_TIMEOUT', 'MEMORY_TOLERANCE'...

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/psutil/tests/__init__.py


