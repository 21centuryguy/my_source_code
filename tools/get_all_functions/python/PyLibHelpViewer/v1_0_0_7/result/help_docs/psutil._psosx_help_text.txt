Help on module psutil._psosx in psutil:

NAME
    psutil._psosx - OSX platform implementation.

CLASSES
    builtins.object
        Process
    builtins.tuple(builtins.object)
        pfullmem
        pmem
        pmmap_ext
        pmmap_grouped
        scputimes
        svmem
    
    class Process(builtins.object)
     |  Wrapper class around underlying C implementation.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, pid)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  cmdline(self)
     |  
     |  connections(self, kind='inet')
     |  
     |  cpu_times(self)
     |  
     |  create_time(self)
     |  
     |  cwd(self)
     |  
     |  environ(self)
     |  
     |  exe(self)
     |  
     |  gids(self)
     |  
     |  memory_full_info(self)
     |  
     |  memory_info(self)
     |  
     |  memory_maps(self)
     |  
     |  name(self)
     |  
     |  nice_get(self)
     |  
     |  nice_set(self, value)
     |  
     |  num_ctx_switches(self)
     |  
     |  num_fds(self)
     |  
     |  num_threads(self)
     |  
     |  oneshot_enter(self)
     |  
     |  oneshot_exit(self)
     |  
     |  open_files(self)
     |  
     |  ppid(self)
     |  
     |  status(self)
     |  
     |  terminal(self)
     |  
     |  threads(self)
     |  
     |  uids(self)
     |  
     |  wait(self, timeout=None)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  pid
    
    class pfullmem(builtins.tuple)
     |  pfullmem(rss, vms, pfaults, pageins, uss)
     |  
     |  Method resolution order:
     |      pfullmem
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getnewargs__(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  __repr__(self)
     |      Return a nicely formatted representation string
     |  
     |  _asdict(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  _replace(_self, **kwds)
     |      Return a new pfullmem object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  _make(iterable, new=<built-in method __new__ of type object at 0x1007505a0>, len=<built-in function len>) from builtins.type
     |      Make a new pfullmem object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(_cls, rss, vms, pfaults, pageins, uss)
     |      Create new instance of pfullmem(rss, vms, pfaults, pageins, uss)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  rss
     |      Alias for field number 0
     |  
     |  vms
     |      Alias for field number 1
     |  
     |  pfaults
     |      Alias for field number 2
     |  
     |  pageins
     |      Alias for field number 3
     |  
     |  uss
     |      Alias for field number 4
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  _fields = ('rss', 'vms', 'pfaults', 'pageins', 'uss')
     |  
     |  _source = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class pmem(builtins.tuple)
     |  pmem(rss, vms, pfaults, pageins)
     |  
     |  Method resolution order:
     |      pmem
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getnewargs__(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  __repr__(self)
     |      Return a nicely formatted representation string
     |  
     |  _asdict(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  _replace(_self, **kwds)
     |      Return a new pmem object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  _make(iterable, new=<built-in method __new__ of type object at 0x1007505a0>, len=<built-in function len>) from builtins.type
     |      Make a new pmem object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(_cls, rss, vms, pfaults, pageins)
     |      Create new instance of pmem(rss, vms, pfaults, pageins)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  rss
     |      Alias for field number 0
     |  
     |  vms
     |      Alias for field number 1
     |  
     |  pfaults
     |      Alias for field number 2
     |  
     |  pageins
     |      Alias for field number 3
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  _fields = ('rss', 'vms', 'pfaults', 'pageins')
     |  
     |  _source = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class pmmap_ext(builtins.tuple)
     |  pmmap_ext(addr, perms, path, rss, private, swapped, dirtied, ref_count, shadow_depth)
     |  
     |  Method resolution order:
     |      pmmap_ext
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getnewargs__(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  __repr__(self)
     |      Return a nicely formatted representation string
     |  
     |  _asdict(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  _replace(_self, **kwds)
     |      Return a new pmmap_ext object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  _make(iterable, new=<built-in method __new__ of type object at 0x1007505a0>, len=<built-in function len>) from builtins.type
     |      Make a new pmmap_ext object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(_cls, addr, perms, path, rss, private, swapped, dirtied, ref_count, shadow_depth)
     |      Create new instance of pmmap_ext(addr, perms, path, rss, private, swapped, dirtied, ref_count, shadow_depth)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  addr
     |      Alias for field number 0
     |  
     |  perms
     |      Alias for field number 1
     |  
     |  path
     |      Alias for field number 2
     |  
     |  rss
     |      Alias for field number 3
     |  
     |  private
     |      Alias for field number 4
     |  
     |  swapped
     |      Alias for field number 5
     |  
     |  dirtied
     |      Alias for field number 6
     |  
     |  ref_count
     |      Alias for field number 7
     |  
     |  shadow_depth
     |      Alias for field number 8
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  _fields = ('addr', 'perms', 'path', 'rss', 'private', 'swapped', 'dirt...
     |  
     |  _source = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class pmmap_grouped(builtins.tuple)
     |  pmmap_grouped(path, rss, private, swapped, dirtied, ref_count, shadow_depth)
     |  
     |  Method resolution order:
     |      pmmap_grouped
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getnewargs__(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  __repr__(self)
     |      Return a nicely formatted representation string
     |  
     |  _asdict(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  _replace(_self, **kwds)
     |      Return a new pmmap_grouped object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  _make(iterable, new=<built-in method __new__ of type object at 0x1007505a0>, len=<built-in function len>) from builtins.type
     |      Make a new pmmap_grouped object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(_cls, path, rss, private, swapped, dirtied, ref_count, shadow_depth)
     |      Create new instance of pmmap_grouped(path, rss, private, swapped, dirtied, ref_count, shadow_depth)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  path
     |      Alias for field number 0
     |  
     |  rss
     |      Alias for field number 1
     |  
     |  private
     |      Alias for field number 2
     |  
     |  swapped
     |      Alias for field number 3
     |  
     |  dirtied
     |      Alias for field number 4
     |  
     |  ref_count
     |      Alias for field number 5
     |  
     |  shadow_depth
     |      Alias for field number 6
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  _fields = ('path', 'rss', 'private', 'swapped', 'dirtied', 'ref_count'...
     |  
     |  _source = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class scputimes(builtins.tuple)
     |  scputimes(user, nice, system, idle)
     |  
     |  Method resolution order:
     |      scputimes
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getnewargs__(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  __repr__(self)
     |      Return a nicely formatted representation string
     |  
     |  _asdict(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  _replace(_self, **kwds)
     |      Return a new scputimes object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  _make(iterable, new=<built-in method __new__ of type object at 0x1007505a0>, len=<built-in function len>) from builtins.type
     |      Make a new scputimes object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(_cls, user, nice, system, idle)
     |      Create new instance of scputimes(user, nice, system, idle)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  user
     |      Alias for field number 0
     |  
     |  nice
     |      Alias for field number 1
     |  
     |  system
     |      Alias for field number 2
     |  
     |  idle
     |      Alias for field number 3
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  _fields = ('user', 'nice', 'system', 'idle')
     |  
     |  _source = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class svmem(builtins.tuple)
     |  svmem(total, available, percent, used, free, active, inactive, wired)
     |  
     |  Method resolution order:
     |      svmem
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __getnewargs__(self)
     |      Return self as a plain tuple.  Used by copy and pickle.
     |  
     |  __repr__(self)
     |      Return a nicely formatted representation string
     |  
     |  _asdict(self)
     |      Return a new OrderedDict which maps field names to their values.
     |  
     |  _replace(_self, **kwds)
     |      Return a new svmem object replacing specified fields with new values
     |  
     |  ----------------------------------------------------------------------
     |  Class methods defined here:
     |  
     |  _make(iterable, new=<built-in method __new__ of type object at 0x1007505a0>, len=<built-in function len>) from builtins.type
     |      Make a new svmem object from a sequence or iterable
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(_cls, total, available, percent, used, free, active, inactive, wired)
     |      Create new instance of svmem(total, available, percent, used, free, active, inactive, wired)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  total
     |      Alias for field number 0
     |  
     |  available
     |      Alias for field number 1
     |  
     |  percent
     |      Alias for field number 2
     |  
     |  used
     |      Alias for field number 3
     |  
     |  free
     |      Alias for field number 4
     |  
     |  active
     |      Alias for field number 5
     |  
     |  inactive
     |      Alias for field number 6
     |  
     |  wired
     |      Alias for field number 7
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  _fields = ('total', 'available', 'percent', 'used', 'free', 'active', ...
     |  
     |  _source = "from builtins import property as _property, tupl..._itemget...
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.

FUNCTIONS
    boot_time()
        The system boot time expressed in seconds since the epoch.
    
    catch_zombie(proc)
        There are some poor C APIs which incorrectly raise ESRCH when
        the process is still alive or it's a zombie, or even RuntimeError
        (those who don't set errno). This is here in order to solve:
        https://github.com/giampaolo/psutil/issues/1044
    
    cpu_count_logical()
        Return the number of logical CPUs in the system.
    
    cpu_count_physical()
        Return the number of physical CPUs in the system.
    
    cpu_freq()
        Return CPU frequency.
        On OSX per-cpu frequency is not supported.
        Also, the returned frequency never changes, see:
        https://arstechnica.com/civis/viewtopic.php?f=19&t=465002
    
    cpu_stats()
    
    cpu_times()
        Return system CPU times as a namedtuple.
    
    disk_io_counters(...)
        Return dict of tuples of disks I/O information.
    
    disk_partitions(all=False)
        Return mounted disk partitions as a list of namedtuples.
    
    net_connections(kind='inet')
        System-wide network connections.
    
    net_if_addrs(...)
        Retrieve NICs information
    
    net_if_stats()
        Get NIC stats (isup, duplex, speed, mtu).
    
    net_io_counters(...)
        Return dict of tuples of networks I/O information.
    
    per_cpu_times()
        Return system CPU times as a named tuple
    
    pids()
    
    sensors_battery()
        Return battery information.
    
    swap_memory()
        Swap system memory as a (total, used, free, sin, sout) tuple.
    
    users()
        Return currently connected users as a list of namedtuples.
    
    virtual_memory()
        System virtual memory as a namedtuple.
    
    wrap_exceptions(fun)
        Decorator which translates bare OSError exceptions into
        NoSuchProcess and AccessDenied.

DATA
    AF_INET = <AddressFamily.AF_INET: 2>
    AF_INET6 = <AddressFamily.AF_INET6: 30>
    AF_LINK = 18
    PAGESIZE = 4096
    PROC_STATUSES = {1: 'idle', 2: 'running', 3: 'sleeping', 4: 'stopped',...
    TCP_STATUSES = {0: 'CLOSE', 1: 'LISTEN', 2: 'SYN_SENT', 3: 'SYN_RECV',...
    __extra__all__ = []
    conn_tmap = {'all': ([<AddressFamily.AF_INET: 2>, <AddressFamily.AF_IN...
    kinfo_proc_map = {'ctime': 8, 'egid': 5, 'euid': 2, 'name': 10, 'ppid'...
    pidtaskinfo_map = {'cpustime': 1, 'cpuutime': 0, 'numthreads': 6, 'pag...

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/psutil/_psosx.py


