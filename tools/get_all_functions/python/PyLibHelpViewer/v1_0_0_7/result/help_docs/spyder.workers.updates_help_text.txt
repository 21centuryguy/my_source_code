Help on module spyder.workers.updates in spyder.workers:

NAME
    spyder.workers.updates

DESCRIPTION
    # -*- coding: utf-8 -*-
    #
    # Copyright Â© Spyder Project Contributors
    # Licensed under the terms of the MIT License
    # (see spyder/__init__.py for details)

CLASSES
    PyQt5.QtCore.QObject(sip.wrapper)
        WorkerUpdates
    
    class WorkerUpdates(PyQt5.QtCore.QObject)
     |  Worker that checks for releases using the Github API without blocking the
     |  Spyder user interface, in case of connections issues.
     |  
     |  Method resolution order:
     |      WorkerUpdates
     |      PyQt5.QtCore.QObject
     |      sip.wrapper
     |      sip.simplewrapper
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __init__(self, parent, startup)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  check_update_available(self, version, releases)
     |      Checks if there is an update available.
     |      
     |      It takes as parameters the current version of Spyder and a list of
     |      valid cleaned releases in chronological order (what github api returns
     |      by default). Example: ['2.3.4', '2.3.3' ...]
     |  
     |  sig_ready = <unbound PYQT_SIGNAL sig_ready()>
     |  start(self)
     |      Main method of the WorkerUpdates worker
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from PyQt5.QtCore.QObject:
     |  
     |  __getattr__(...)
     |      __getattr__(self, str) -> object
     |  
     |  blockSignals(...)
     |      blockSignals(self, bool) -> bool
     |  
     |  childEvent(...)
     |      childEvent(self, QChildEvent)
     |  
     |  children(...)
     |      children(self) -> object
     |  
     |  connectNotify(...)
     |      connectNotify(self, QMetaMethod)
     |  
     |  customEvent(...)
     |      customEvent(self, QEvent)
     |  
     |  deleteLater(...)
     |      deleteLater(self)
     |  
     |  destroyed = <unbound PYQT_SIGNAL destroyed(QObject*)>
     |  disconnect(...)
     |      disconnect(self)
     |  
     |  disconnectNotify(...)
     |      disconnectNotify(self, QMetaMethod)
     |  
     |  dumpObjectInfo(...)
     |      dumpObjectInfo(self)
     |  
     |  dumpObjectTree(...)
     |      dumpObjectTree(self)
     |  
     |  dynamicPropertyNames(...)
     |      dynamicPropertyNames(self) -> object
     |  
     |  event(...)
     |      event(self, QEvent) -> bool
     |  
     |  eventFilter(...)
     |      eventFilter(self, QObject, QEvent) -> bool
     |  
     |  findChild(...)
     |      findChild(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |      findChild(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> QObject
     |  
     |  findChildren(...)
     |      findChildren(self, type, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, name: str = '', options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegExp, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, type, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |      findChildren(self, Tuple, QRegularExpression, options: Union[Qt.FindChildOptions, Qt.FindChildOption] = Qt.FindChildrenRecursively) -> List[QObject]
     |  
     |  inherits(...)
     |      inherits(self, str) -> bool
     |  
     |  installEventFilter(...)
     |      installEventFilter(self, QObject)
     |  
     |  isSignalConnected(...)
     |      isSignalConnected(self, QMetaMethod) -> bool
     |  
     |  isWidgetType(...)
     |      isWidgetType(self) -> bool
     |  
     |  isWindowType(...)
     |      isWindowType(self) -> bool
     |  
     |  killTimer(...)
     |      killTimer(self, int)
     |  
     |  metaObject(...)
     |      metaObject(self) -> QMetaObject
     |  
     |  moveToThread(...)
     |      moveToThread(self, QThread)
     |  
     |  objectName(...)
     |      objectName(self) -> str
     |  
     |  objectNameChanged = <unbound PYQT_SIGNAL objectNameChanged(QString)>
     |  parent(...)
     |      parent(self) -> QObject
     |  
     |  property(...)
     |      property(self, str) -> Any
     |  
     |  pyqtConfigure(...)
     |      QObject.pyqtConfigure(...)
     |      
     |      Each keyword argument is either the name of a Qt property or a Qt signal.
     |      For properties the property is set to the given value which should be of an
     |      appropriate type.
     |      For signals the signal is connected to the given value which should be a
     |      callable.
     |  
     |  receivers(...)
     |      receivers(self, PYQT_SIGNAL) -> int
     |  
     |  removeEventFilter(...)
     |      removeEventFilter(self, QObject)
     |  
     |  sender(...)
     |      sender(self) -> QObject
     |  
     |  senderSignalIndex(...)
     |      senderSignalIndex(self) -> int
     |  
     |  setObjectName(...)
     |      setObjectName(self, str)
     |  
     |  setParent(...)
     |      setParent(self, QObject)
     |  
     |  setProperty(...)
     |      setProperty(self, str, Any) -> bool
     |  
     |  signalsBlocked(...)
     |      signalsBlocked(self) -> bool
     |  
     |  startTimer(...)
     |      startTimer(self, int, timerType: Qt.TimerType = Qt.CoarseTimer) -> int
     |  
     |  thread(...)
     |      thread(self) -> QThread
     |  
     |  timerEvent(...)
     |      timerEvent(self, QTimerEvent)
     |  
     |  tr(...)
     |      tr(self, str, disambiguation: str = None, n: int = -1) -> str
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from PyQt5.QtCore.QObject:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes inherited from PyQt5.QtCore.QObject:
     |  
     |  staticMetaObject = <PyQt5.QtCore.QMetaObject object>
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from sip.simplewrapper:
     |  
     |  __new__(*args, **kwargs) from sip.wrappertype
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from sip.simplewrapper:
     |  
     |  __dict__

DATA
    PY3 = True

VERSION
    3.3.0

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/spyder/workers/updates.py


