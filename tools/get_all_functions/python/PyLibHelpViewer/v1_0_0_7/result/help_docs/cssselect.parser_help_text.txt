Help on module cssselect.parser in cssselect:

NAME
    cssselect.parser

DESCRIPTION
    cssselect.parser
    ================
    
    Tokenizer, parser and parsed objects for CSS selectors.
    
    
    :copyright: (c) 2007-2012 Ian Bicking and contributors.
                See AUTHORS for more details.
    :license: BSD, see LICENSE for more details.

CLASSES
    builtins.Exception(builtins.BaseException)
        SelectorError
            SelectorSyntaxError(SelectorError, builtins.SyntaxError)
    builtins.object
        Attrib
        Class
        CombinedSelector
        Element
        Function
        FunctionalPseudoElement
        Hash
        Negation
        Pseudo
        Selector
        TokenMacros
        TokenStream
    builtins.tuple(builtins.object)
        Token
            EOFToken
    
    class Attrib(builtins.object)
     |  Represents selector[namespace|attrib operator value]
     |  
     |  Methods defined here:
     |  
     |  __init__(self, selector, namespace, attrib, operator, value)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Class(builtins.object)
     |  Represents selector.class_name
     |  
     |  Methods defined here:
     |  
     |  __init__(self, selector, class_name)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class CombinedSelector(builtins.object)
     |  Methods defined here:
     |  
     |  __init__(self, selector, combinator, subselector)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class EOFToken(Token)
     |  tuple() -> empty tuple
     |  tuple(iterable) -> tuple initialized from iterable's items
     |  
     |  If the argument is a tuple, the return value is the same object.
     |  
     |  Method resolution order:
     |      EOFToken
     |      Token
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(cls, pos)
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from Token:
     |  
     |  is_delim(self, *values)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from Token:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  type
     |      itemgetter(item, ...) --> itemgetter object
     |      
     |      Return a callable object that fetches the given item(s) from its operand.
     |      After f = itemgetter(2), the call f(r) returns r[2].
     |      After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])
     |  
     |  value
     |      itemgetter(item, ...) --> itemgetter object
     |      
     |      Return a callable object that fetches the given item(s) from its operand.
     |      After f = itemgetter(2), the call f(r) returns r[2].
     |      After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __getnewargs__(...)
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class Element(builtins.object)
     |  Represents namespace|element
     |  
     |  `None` is for the universal selector '*'
     |  
     |  Methods defined here:
     |  
     |  __init__(self, namespace=None, element=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Function(builtins.object)
     |  Represents selector:name(expr)
     |  
     |  Methods defined here:
     |  
     |  __init__(self, selector, name, arguments)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  argument_types(self)
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class FunctionalPseudoElement(builtins.object)
     |  Represents selector::name(arguments)
     |  
     |  .. attribute:: name
     |  
     |      The name (identifier) of the pseudo-element, as a string.
     |  
     |  .. attribute:: arguments
     |  
     |      The arguments of the pseudo-element, as a list of tokens.
     |  
     |      **Note:** tokens are not part of the public API,
     |      and may change between cssselect versions.
     |      Use at your own risks.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, name, arguments)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  argument_types(self)
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Hash(builtins.object)
     |  Represents selector#id
     |  
     |  Methods defined here:
     |  
     |  __init__(self, selector, id)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Negation(builtins.object)
     |  Represents selector:not(subselector)
     |  
     |  Methods defined here:
     |  
     |  __init__(self, selector, subselector)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Pseudo(builtins.object)
     |  Represents selector:ident
     |  
     |  Methods defined here:
     |  
     |  __init__(self, selector, ident)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class Selector(builtins.object)
     |  Represents a parsed selector.
     |  
     |  :meth:`~GenericTranslator.selector_to_xpath` accepts this object,
     |  but ignores :attr:`pseudo_element`. It is the user’s responsibility
     |  to account for pseudo-elements and reject selectors with unknown
     |  or unsupported pseudo-elements.
     |  
     |  Methods defined here:
     |  
     |  __init__(self, tree, pseudo_element=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  specificity(self)
     |      Return the specificity_ of this selector as a tuple of 3 integers.
     |      
     |      .. _specificity: http://www.w3.org/TR/selectors/#specificity
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
    
    class SelectorError(builtins.Exception)
     |  Common parent for :class:`SelectorSyntaxError` and
     |  :class:`ExpressionError`.
     |  
     |  You can just use ``except SelectorError:`` when calling
     |  :meth:`~GenericTranslator.css_to_xpath` and handle both exceptions types.
     |  
     |  Method resolution order:
     |      SelectorError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      helper for pickle
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class SelectorSyntaxError(SelectorError, builtins.SyntaxError)
     |  Parsing a selector that does not match the grammar.
     |  
     |  Method resolution order:
     |      SelectorSyntaxError
     |      SelectorError
     |      builtins.SyntaxError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.SyntaxError:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.SyntaxError:
     |  
     |  filename
     |      exception filename
     |  
     |  lineno
     |      exception lineno
     |  
     |  msg
     |      exception msg
     |  
     |  offset
     |      exception offset
     |  
     |  print_file_and_line
     |      exception print_file_and_line
     |  
     |  text
     |      exception text
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      helper for pickle
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class Token(builtins.tuple)
     |  tuple() -> empty tuple
     |  tuple(iterable) -> tuple initialized from iterable's items
     |  
     |  If the argument is a tuple, the return value is the same object.
     |  
     |  Method resolution order:
     |      Token
     |      builtins.tuple
     |      builtins.object
     |  
     |  Methods defined here:
     |  
     |  __repr__(self)
     |      Return repr(self).
     |  
     |  is_delim(self, *values)
     |  
     |  ----------------------------------------------------------------------
     |  Static methods defined here:
     |  
     |  __new__(cls, type_, value, pos)
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  type
     |      itemgetter(item, ...) --> itemgetter object
     |      
     |      Return a callable object that fetches the given item(s) from its operand.
     |      After f = itemgetter(2), the call f(r) returns r[2].
     |      After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])
     |  
     |  value
     |      itemgetter(item, ...) --> itemgetter object
     |      
     |      Return a callable object that fetches the given item(s) from its operand.
     |      After f = itemgetter(2), the call f(r) returns r[2].
     |      After g = itemgetter(2, 5, 3), the call g(r) returns (r[2], r[5], r[3])
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.tuple:
     |  
     |  __add__(self, value, /)
     |      Return self+value.
     |  
     |  __contains__(self, key, /)
     |      Return key in self.
     |  
     |  __eq__(self, value, /)
     |      Return self==value.
     |  
     |  __ge__(self, value, /)
     |      Return self>=value.
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __getitem__(self, key, /)
     |      Return self[key].
     |  
     |  __getnewargs__(...)
     |  
     |  __gt__(self, value, /)
     |      Return self>value.
     |  
     |  __hash__(self, /)
     |      Return hash(self).
     |  
     |  __iter__(self, /)
     |      Implement iter(self).
     |  
     |  __le__(self, value, /)
     |      Return self<=value.
     |  
     |  __len__(self, /)
     |      Return len(self).
     |  
     |  __lt__(self, value, /)
     |      Return self<value.
     |  
     |  __mul__(self, value, /)
     |      Return self*value.
     |  
     |  __ne__(self, value, /)
     |      Return self!=value.
     |  
     |  __rmul__(self, value, /)
     |      Return value*self.
     |  
     |  count(...)
     |      T.count(value) -> integer -- return number of occurrences of value
     |  
     |  index(...)
     |      T.index(value, [start, [stop]]) -> integer -- return first index of value.
     |      Raises ValueError if the value is not present.
    
    class TokenMacros(builtins.object)
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Data and other attributes defined here:
     |  
     |  escape = r'\\([0-9a-f]{1,6})(?:\r\n|[ \n\r\t\f])?|\\[^\n\r\f0-9a-f]'
     |  
     |  nmchar = r'[_a-z0-9-]|\\([0-9a-f]{1,6})(?:\r\n|[ \n\r\t\f])?|\\[^\n\r\...
     |  
     |  nmstart = r'[_a-z]|\\([0-9a-f]{1,6})(?:\r\n|[ \n\r\t\f])?|\\[^\n\r\f0-...
     |  
     |  nonascii = r'[^\0-\177]'
     |  
     |  string_escape = r'\\(?:\n|\r\n|\r|\f)|\\([0-9a-f]{1,6})(?:\r\n|[ \n\r\...
     |  
     |  unicode_escape = r'\\([0-9a-f]{1,6})(?:\r\n|[ \n\r\t\f])?'
    
    class TokenStream(builtins.object)
     |  Methods defined here:
     |  
     |  __init__(self, tokens, source=None)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  next(self)
     |  
     |  next_ident(self)
     |  
     |  next_ident_or_star(self)
     |  
     |  peek(self)
     |  
     |  skip_whitespace(self)
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    ascii_lower(string)
        Lower-case, but only in the ASCII range.
    
    parse(css)
        Parse a CSS *group of selectors*.
        
        If you don't care about pseudo-elements or selector specificity,
        you can skip this and use :meth:`~GenericTranslator.css_to_xpath`.
        
        :param css:
            A *group of selectors* as an Unicode string.
        :raises:
            :class:`SelectorSyntaxError` on invalid selectors.
        :returns:
            A list of parsed :class:`Selector` objects, one for each
            selector in the comma-separated group.
    
    parse_arguments(stream)
    
    parse_attrib(selector, stream)
    
    parse_selector(stream)
    
    parse_selector_group(stream)
    
    parse_series(tokens)
        Parses the arguments for :nth-child() and friends.
        
        :raises: A list of tokens
        :returns: :``(a, b)``
    
    parse_simple_selector(stream, inside_negation=False)
    
    tokenize(s)
    
    unescape_ident(value)

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/cssselect/parser.py


