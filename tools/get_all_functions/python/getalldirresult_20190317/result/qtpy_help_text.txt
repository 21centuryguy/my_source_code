Help on package qtpy:

NAME
    qtpy

DESCRIPTION
    **QtPy** is a shim over the various Python Qt bindings. It is used to write
    Qt binding indenpendent libraries or applications.
    
    If one of the APIs has already been imported, then it will be used.
    
    Otherwise, the shim will automatically select the first available API (PyQt5,
    PySide2, PyQt4 and finally PySide); in that case, you can force the use of one
    specific bindings (e.g. if your application is using one specific bindings and
    you need to use library that use QtPy) by setting up the ``QT_API`` environment
    variable.
    
    PyQt5
    =====
    
    For PyQt5, you don't have to set anything as it will be used automatically::
    
        >>> from qtpy import QtGui, QtWidgets, QtCore
        >>> print(QtWidgets.QWidget)
    
    
    PySide2
    ======
    
    Set the QT_API environment variable to 'pyside2' before importing other
    packages::
    
        >>> import os
        >>> os.environ['QT_API'] = 'pyside2'
        >>> from qtpy import QtGui, QtWidgets, QtCore
        >>> print(QtWidgets.QWidget)
    
    PyQt4
    =====
    
    Set the ``QT_API`` environment variable to 'pyqt' before importing any python
    package::
    
        >>> import os
        >>> os.environ['QT_API'] = 'pyqt'
        >>> from qtpy import QtGui, QtWidgets, QtCore
        >>> print(QtWidgets.QWidget)
    
    PySide
    ======
    
    Set the QT_API environment variable to 'pyside' before importing other
    packages::
    
        >>> import os
        >>> os.environ['QT_API'] = 'pyside'
        >>> from qtpy import QtGui, QtWidgets, QtCore
        >>> print(QtWidgets.QWidget)

PACKAGE CONTENTS
    QtCore
    QtDesigner
    QtGui
    QtHelp
    QtMultimedia
    QtNetwork
    QtOpenGL
    QtPrintSupport
    QtSql
    QtSvg
    QtTest
    QtWebEngineWidgets
    QtWidgets
    _patch (package)
    _version
    compat
    py3compat
    tests (package)
    uic

CLASSES
    builtins.Exception(builtins.BaseException)
        PythonQtError
    builtins.Warning(builtins.Exception)
        PythonQtWarning
    
    class PythonQtError(builtins.Exception)
     |  Error raise if no bindings could be selected
     |  
     |  Method resolution order:
     |      PythonQtError
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Exception:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      helper for pickle
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args
    
    class PythonQtWarning(builtins.Warning)
     |  Warning if some features are not implemented in a binding.
     |  
     |  Method resolution order:
     |      PythonQtWarning
     |      builtins.Warning
     |      builtins.Exception
     |      builtins.BaseException
     |      builtins.object
     |  
     |  Data descriptors defined here:
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.Warning:
     |  
     |  __init__(self, /, *args, **kwargs)
     |      Initialize self.  See help(type(self)) for accurate signature.
     |  
     |  __new__(*args, **kwargs) from builtins.type
     |      Create and return a new object.  See help(type) for accurate signature.
     |  
     |  ----------------------------------------------------------------------
     |  Methods inherited from builtins.BaseException:
     |  
     |  __delattr__(self, name, /)
     |      Implement delattr(self, name).
     |  
     |  __getattribute__(self, name, /)
     |      Return getattr(self, name).
     |  
     |  __reduce__(...)
     |      helper for pickle
     |  
     |  __repr__(self, /)
     |      Return repr(self).
     |  
     |  __setattr__(self, name, value, /)
     |      Implement setattr(self, name, value).
     |  
     |  __setstate__(...)
     |  
     |  __str__(self, /)
     |      Return str(self).
     |  
     |  with_traceback(...)
     |      Exception.with_traceback(tb) --
     |      set self.__traceback__ to tb and return self.
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors inherited from builtins.BaseException:
     |  
     |  __cause__
     |      exception cause
     |  
     |  __context__
     |      exception context
     |  
     |  __dict__
     |  
     |  __suppress_context__
     |  
     |  __traceback__
     |  
     |  args

DATA
    API = 'pyqt5'
    API_NAME = 'PyQt5'
    PYQT4 = False
    PYQT4_API = ['pyqt', 'pyqt4']
    PYQT5 = True
    PYQT5_API = ['pyqt5']
    PYQT_VERSION = '5.11.2'
    PYSIDE = False
    PYSIDE2 = False
    PYSIDE2_API = ['pyside2']
    PYSIDE_API = ['pyside']
    PYSIDE_VERSION = None
    QT_API = 'QT_API'
    QT_VERSION = '5.11.1'
    initial_api = 'pyqt5'
    is_old_pyqt = False
    is_pyqt46 = False

VERSION
    1.4.2

FILE
    /Users/jack/miniconda2/envs/py37/lib/python3.6/site-packages/qtpy/__init__.py


